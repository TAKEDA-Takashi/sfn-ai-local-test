{
  "Comment": "Simple error handling demonstration workflow",
  "StartAt": "ProcessTransaction",
  "States": {
    "ProcessTransaction": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "ProcessTransactionFunction",
        "Payload": {
          "transactionId.$": "$.transactionId",
          "amount.$": "$.amount",
          "type.$": "$.type"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "Lambda.ServiceException"],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["InsufficientFundsError"],
          "Next": "HandleInsufficientFunds",
          "ResultPath": "$.error"
        },
        {
          "ErrorEquals": ["ValidationError"],
          "Next": "HandleValidationError",
          "ResultPath": "$.error"
        },
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "HandleGeneralError",
          "ResultPath": "$.error"
        }
      ],
      "Next": "NotifySuccess"
    },
    "NotifySuccess": {
      "Type": "Pass",
      "Parameters": {
        "status": "success",
        "message": "Transaction completed successfully",
        "transactionId.$": "$.Payload.transactionId",
        "processedAmount.$": "$.Payload.amount"
      },
      "End": true
    },
    "HandleInsufficientFunds": {
      "Type": "Pass",
      "Parameters": {
        "status": "failed",
        "errorType": "InsufficientFunds",
        "message": "Transaction failed due to insufficient funds",
        "transactionId.$": "$.transactionId",
        "errorDetails.$": "$.error"
      },
      "End": true
    },
    "HandleValidationError": {
      "Type": "Pass",
      "Parameters": {
        "status": "failed",
        "errorType": "Validation",
        "message": "Transaction failed validation",
        "transactionId.$": "$.transactionId",
        "errorDetails.$": "$.error"
      },
      "End": true
    },
    "HandleGeneralError": {
      "Type": "Pass",
      "Parameters": {
        "status": "failed",
        "errorType": "General",
        "message": "Transaction failed due to unexpected error",
        "transactionId.$": "$.transactionId",
        "errorDetails.$": "$.error"
      },
      "End": true
    }
  }
}
